// 指定 proto 版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.2
// source: log.proto

// 指定包名

package grpc_proto_log

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 结构1：引用日志数据格式
type DbLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbInstance string            `protobuf:"bytes,1,opt,name=dbInstance,proto3" json:"dbInstance,omitempty"`                                                                             // "anoah",
	Type       string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                                                         // table-create / update / insert
	Database   string            `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`                                                                                 // $db,
	Table      string            `protobuf:"bytes,4,opt,name=table,proto3" json:"table,omitempty"`                                                                                       // $tb,
	Ts         string            `protobuf:"bytes,5,opt,name=ts,proto3" json:"ts,omitempty"`                                                                                             // time(),
	Position   string            `protobuf:"bytes,6,opt,name=position,proto3" json:"position,omitempty"`                                                                                 // "xxx",
	Xid        int64             `protobuf:"varint,7,opt,name=xid,proto3" json:"xid,omitempty"`                                                                                          // 1, (update / insert 时有值)
	Commit     bool              `protobuf:"varint,8,opt,name=commit,proto3" json:"commit,omitempty"`                                                                                    // true, (update / insert 时有值)
	Data       map[string]string `protobuf:"bytes,9,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // (update / insert 时有值)
	Sql        string            `protobuf:"bytes,10,opt,name=sql,proto3" json:"sql,omitempty"`                                                                                          // "CREATE TABLE `$tb` ( // CREATE TABLE …… (table-create 的时候有值)
}

func (x *DbLogData) Reset() {
	*x = DbLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DbLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbLogData) ProtoMessage() {}

func (x *DbLogData) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbLogData.ProtoReflect.Descriptor instead.
func (*DbLogData) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

func (x *DbLogData) GetDbInstance() string {
	if x != nil {
		return x.DbInstance
	}
	return ""
}

func (x *DbLogData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DbLogData) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DbLogData) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DbLogData) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *DbLogData) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *DbLogData) GetXid() int64 {
	if x != nil {
		return x.Xid
	}
	return 0
}

func (x *DbLogData) GetCommit() bool {
	if x != nil {
		return x.Commit
	}
	return false
}

func (x *DbLogData) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DbLogData) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

// 结构2：请求数据格式
type DbLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType int32  `protobuf:"varint,1,opt,name=DataType,proto3" json:"DataType,omitempty"` // 数据类型
	Data     []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`          // 内容数据
}

func (x *DbLogRequest) Reset() {
	*x = DbLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DbLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbLogRequest) ProtoMessage() {}

func (x *DbLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbLogRequest.ProtoReflect.Descriptor instead.
func (*DbLogRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{1}
}

func (x *DbLogRequest) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *DbLogRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 结构3：返回数据格式
type DbLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode    int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DbLogResponse) Reset() {
	*x = DbLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DbLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbLogResponse) ProtoMessage() {}

func (x *DbLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbLogResponse.ProtoReflect.Descriptor instead.
func (*DbLogResponse) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{2}
}

func (x *DbLogResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *DbLogResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

func (x *DbLogResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// 结构1：引用日志数据格式
type AppLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env       string            `protobuf:"bytes,1,opt,name=Env,proto3" json:"Env,omitempty"`                                                                                           // 环境 dev/prod/test/k8s等
	Sys       string            `protobuf:"bytes,2,opt,name=Sys,proto3" json:"Sys,omitempty"`                                                                                           // 系统 yxb/zuoye等
	Level     string            `protobuf:"bytes,3,opt,name=Level,proto3" json:"Level,omitempty"`                                                                                       // 级别: error/warning/info等
	File      string            `protobuf:"bytes,4,opt,name=File,proto3" json:"File,omitempty"`                                                                                         // 程序文件地址
	Func      string            `protobuf:"bytes,5,opt,name=Func,proto3" json:"Func,omitempty"`                                                                                         // 程序函数
	Time      string            `protobuf:"bytes,6,opt,name=Time,proto3" json:"Time,omitempty"`                                                                                         // 发生时间 "2022-01-01 12:12:12"
	TimeInt64 int64             `protobuf:"varint,7,opt,name=TimeInt64,proto3" json:"TimeInt64,omitempty"`                                                                              // 发生时间时间戳纳秒
	Message   string            `protobuf:"bytes,8,opt,name=Message,proto3" json:"Message,omitempty"`                                                                                   // 日志内容
	Data      map[string]string `protobuf:"bytes,9,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map格式更多数据
}

func (x *AppLogData) Reset() {
	*x = AppLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLogData) ProtoMessage() {}

func (x *AppLogData) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLogData.ProtoReflect.Descriptor instead.
func (*AppLogData) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{3}
}

func (x *AppLogData) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *AppLogData) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *AppLogData) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *AppLogData) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *AppLogData) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *AppLogData) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *AppLogData) GetTimeInt64() int64 {
	if x != nil {
		return x.TimeInt64
	}
	return 0
}

func (x *AppLogData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppLogData) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// 结构2：请求数据格式
type AppLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType int32  `protobuf:"varint,1,opt,name=DataType,proto3" json:"DataType,omitempty"` // 数据类型
	Data     []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`          // 内容数据
}

func (x *AppLogRequest) Reset() {
	*x = AppLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLogRequest) ProtoMessage() {}

func (x *AppLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLogRequest.ProtoReflect.Descriptor instead.
func (*AppLogRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{4}
}

func (x *AppLogRequest) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *AppLogRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 结构3：返回数据格式
type AppLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode    int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AppLogResponse) Reset() {
	*x = AppLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLogResponse) ProtoMessage() {}

func (x *AppLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLogResponse.ProtoReflect.Descriptor instead.
func (*AppLogResponse) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{5}
}

func (x *AppLogResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *AppLogResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

func (x *AppLogResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// 结构2：请求数据格式
type JsonLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType int32  `protobuf:"varint,1,opt,name=DataType,proto3" json:"DataType,omitempty"` // 数据类型
	Data     []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`          // 内容数据
}

func (x *JsonLogRequest) Reset() {
	*x = JsonLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonLogRequest) ProtoMessage() {}

func (x *JsonLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonLogRequest.ProtoReflect.Descriptor instead.
func (*JsonLogRequest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{6}
}

func (x *JsonLogRequest) GetDataType() int32 {
	if x != nil {
		return x.DataType
	}
	return 0
}

func (x *JsonLogRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 结构3：返回数据格式
type JsonLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode    int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *JsonLogResponse) Reset() {
	*x = JsonLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonLogResponse) ProtoMessage() {}

func (x *JsonLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonLogResponse.ProtoReflect.Descriptor instead.
func (*JsonLogResponse) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{7}
}

func (x *JsonLogResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *JsonLogResponse) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

func (x *JsonLogResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_log_proto protoreflect.FileDescriptor

var file_log_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x22, 0xcb, 0x02, 0x0a, 0x09,
	0x44, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x62, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x78,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x78, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x0c, 0x44, 0x62, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x0d, 0x44, 0x62, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xad, 0x02, 0x0a, 0x0a, 0x41, 0x70, 0x70,
	0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x0e, 0x41, 0x70, 0x70,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x0e, 0x4a, 0x73, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x0f, 0x4a,
	0x73, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xf5, 0x01, 0x0a,
	0x03, 0x4c, 0x6f, 0x67, 0x12, 0x4b, 0x0a, 0x0a, 0x44, 0x62, 0x4c, 0x6f, 0x67, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x62, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c, 0x6f,
	0x67, 0x2e, 0x44, 0x62, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c, 0x6f,
	0x67, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x67,
	0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x0c, 0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c,
	0x6f, 0x67, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c,
	0x6f, 0x67, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_log_proto_rawDescOnce sync.Once
	file_log_proto_rawDescData = file_log_proto_rawDesc
)

func file_log_proto_rawDescGZIP() []byte {
	file_log_proto_rawDescOnce.Do(func() {
		file_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_log_proto_rawDescData)
	})
	return file_log_proto_rawDescData
}

var file_log_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_log_proto_goTypes = []interface{}{
	(*DbLogData)(nil),       // 0: grpc_proto_log.DbLogData
	(*DbLogRequest)(nil),    // 1: grpc_proto_log.DbLogRequest
	(*DbLogResponse)(nil),   // 2: grpc_proto_log.DbLogResponse
	(*AppLogData)(nil),      // 3: grpc_proto_log.AppLogData
	(*AppLogRequest)(nil),   // 4: grpc_proto_log.AppLogRequest
	(*AppLogResponse)(nil),  // 5: grpc_proto_log.AppLogResponse
	(*JsonLogRequest)(nil),  // 6: grpc_proto_log.JsonLogRequest
	(*JsonLogResponse)(nil), // 7: grpc_proto_log.JsonLogResponse
	nil,                     // 8: grpc_proto_log.DbLogData.DataEntry
	nil,                     // 9: grpc_proto_log.AppLogData.DataEntry
}
var file_log_proto_depIdxs = []int32{
	8, // 0: grpc_proto_log.DbLogData.data:type_name -> grpc_proto_log.DbLogData.DataEntry
	9, // 1: grpc_proto_log.AppLogData.Data:type_name -> grpc_proto_log.AppLogData.DataEntry
	1, // 2: grpc_proto_log.Log.DbLogWrite:input_type -> grpc_proto_log.DbLogRequest
	4, // 3: grpc_proto_log.Log.AppLogWrite:input_type -> grpc_proto_log.AppLogRequest
	6, // 4: grpc_proto_log.Log.JsonLogWrite:input_type -> grpc_proto_log.JsonLogRequest
	2, // 5: grpc_proto_log.Log.DbLogWrite:output_type -> grpc_proto_log.DbLogResponse
	5, // 6: grpc_proto_log.Log.AppLogWrite:output_type -> grpc_proto_log.AppLogResponse
	7, // 7: grpc_proto_log.Log.JsonLogWrite:output_type -> grpc_proto_log.JsonLogResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_log_proto_init() }
func file_log_proto_init() {
	if File_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DbLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DbLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DbLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_log_proto_goTypes,
		DependencyIndexes: file_log_proto_depIdxs,
		MessageInfos:      file_log_proto_msgTypes,
	}.Build()
	File_log_proto = out.File
	file_log_proto_rawDesc = nil
	file_log_proto_goTypes = nil
	file_log_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogClient is the client API for Log service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogClient interface {
	// 定义 Write 方法
	DbLogWrite(ctx context.Context, in *DbLogRequest, opts ...grpc.CallOption) (*DbLogResponse, error)
	// 定义 Write 方法
	AppLogWrite(ctx context.Context, in *AppLogRequest, opts ...grpc.CallOption) (*AppLogResponse, error)
	// 定义 Write 方法
	JsonLogWrite(ctx context.Context, in *JsonLogRequest, opts ...grpc.CallOption) (*JsonLogResponse, error)
}

type logClient struct {
	cc grpc.ClientConnInterface
}

func NewLogClient(cc grpc.ClientConnInterface) LogClient {
	return &logClient{cc}
}

func (c *logClient) DbLogWrite(ctx context.Context, in *DbLogRequest, opts ...grpc.CallOption) (*DbLogResponse, error) {
	out := new(DbLogResponse)
	err := c.cc.Invoke(ctx, "/grpc_proto_log.Log/DbLogWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logClient) AppLogWrite(ctx context.Context, in *AppLogRequest, opts ...grpc.CallOption) (*AppLogResponse, error) {
	out := new(AppLogResponse)
	err := c.cc.Invoke(ctx, "/grpc_proto_log.Log/AppLogWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logClient) JsonLogWrite(ctx context.Context, in *JsonLogRequest, opts ...grpc.CallOption) (*JsonLogResponse, error) {
	out := new(JsonLogResponse)
	err := c.cc.Invoke(ctx, "/grpc_proto_log.Log/JsonLogWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServer is the server API for Log service.
type LogServer interface {
	// 定义 Write 方法
	DbLogWrite(context.Context, *DbLogRequest) (*DbLogResponse, error)
	// 定义 Write 方法
	AppLogWrite(context.Context, *AppLogRequest) (*AppLogResponse, error)
	// 定义 Write 方法
	JsonLogWrite(context.Context, *JsonLogRequest) (*JsonLogResponse, error)
}

// UnimplementedLogServer can be embedded to have forward compatible implementations.
type UnimplementedLogServer struct {
}

func (*UnimplementedLogServer) DbLogWrite(context.Context, *DbLogRequest) (*DbLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DbLogWrite not implemented")
}
func (*UnimplementedLogServer) AppLogWrite(context.Context, *AppLogRequest) (*AppLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppLogWrite not implemented")
}
func (*UnimplementedLogServer) JsonLogWrite(context.Context, *JsonLogRequest) (*JsonLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JsonLogWrite not implemented")
}

func RegisterLogServer(s *grpc.Server, srv LogServer) {
	s.RegisterService(&_Log_serviceDesc, srv)
}

func _Log_DbLogWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DbLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).DbLogWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_proto_log.Log/DbLogWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).DbLogWrite(ctx, req.(*DbLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Log_AppLogWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).AppLogWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_proto_log.Log/AppLogWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).AppLogWrite(ctx, req.(*AppLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Log_JsonLogWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JsonLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).JsonLogWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_proto_log.Log/JsonLogWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).JsonLogWrite(ctx, req.(*JsonLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Log_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_proto_log.Log",
	HandlerType: (*LogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DbLogWrite",
			Handler:    _Log_DbLogWrite_Handler,
		},
		{
			MethodName: "AppLogWrite",
			Handler:    _Log_AppLogWrite_Handler,
		},
		{
			MethodName: "JsonLogWrite",
			Handler:    _Log_JsonLogWrite_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "log.proto",
}
